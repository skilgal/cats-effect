[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/private/var/folders/k8/g34fmp8n0vx243qf0zf13yqm0000gp/T/idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/private/var/folders/k8/g34fmp8n0vx243qf0zf13yqm0000gp/T/idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (AdoptOpenJDK Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 301.151614ms
[debug]       Load.loadUnit: defsScala took 0.553188ms
[debug] [Loading] Scanning directory /Users/dmytro/.sbt/1.0/plugins
[debug]         Load.loadUnit: mkEval took 14.880224ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/dmytro/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 50.272975 ms
[info] loading settings for project global-plugins from credentials.sbt ...
[debug]           Load.resolveProject(global-plugins) took 111.883034ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/dmytro/.sbt/1.0/plugins, plugins: List(<none>))) took 227.32546ms
[debug] [Loading] Done in /Users/dmytro/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 437.450541ms
[debug]       Load.loadUnit: cleanEvalClasses took 13.848024ms
[debug]     Load.loadUnit(file:/Users/dmytro/.sbt/1.0/plugins/, ...) took 764.842229ms
[debug]   Load.apply: load took 1145.797018ms
[debug]   Load.apply: resolveProjects took 6.006042ms
[debug]   Load.apply: finalTransforms took 81.400896ms
[debug]   Load.apply: config.delegates took 12.58185ms
[debug]   Load.apply: Def.make(settings)... took 539.85262ms
[debug]   Load.apply: structureIndex took 118.210039ms
[debug]   Load.apply: mkStreams took 1.776592ms
[info] loading global plugins from /Users/dmytro/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3724.144002ms
[debug]                 Load.loadUnit: plugins took 18.185708ms
[debug]                 Load.loadUnit: defsScala took 0.003733ms
[debug] [Loading] Scanning directory /Users/dmytro/Git/rockthejvm/cats-effect/project/project
[debug]                   Load.loadUnit: mkEval took 0.249735ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/dmytro/Git/rockthejvm/cats-effect/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.49621 ms
[info] loading settings for project cats-effect-build-build from metals.sbt ...
[debug]                     Load.resolveProject(cats-effect-build-build) took 1.522392ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id cats-effect-build-build, base: /Users/dmytro/Git/rockthejvm/cats-effect/project/project, plugins: List(<none>))) took 4.601163ms
[debug] [Loading] Done in /Users/dmytro/Git/rockthejvm/cats-effect/project/project, returning: (cats-effect-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 17.592265ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.722684ms
[debug]               Load.loadUnit(file:/Users/dmytro/Git/rockthejvm/cats-effect/project/project/, ...) took 37.245456ms
[debug]             Load.apply: load took 38.41235ms
[debug]             Load.apply: resolveProjects took 0.099998ms
[debug]             Load.apply: finalTransforms took 9.428852ms
[debug]             Load.apply: config.delegates took 0.457099ms
[debug]             Load.apply: Def.make(settings)... took 83.754418ms
[debug]             Load.apply: structureIndex took 32.892594ms
[debug]             Load.apply: mkStreams took 0.002817ms
[info] loading project definition from /Users/dmytro/Git/rockthejvm/cats-effect/project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 501.452663ms
[debug]           Load.loadUnit: defsScala took 0.005279ms
[debug] [Loading] Scanning directory /Users/dmytro/Git/rockthejvm/cats-effect/project
[debug]             Load.loadUnit: mkEval took 0.278444ms
